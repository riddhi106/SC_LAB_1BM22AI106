from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier
from sklearn.utils import resample
from sklearn.metrics import accuracy_score
import numpy as np

X, y = load_iris(return_X_y=True)
np.random.seed(0)
idx = np.random.permutation(len(X))
X_train, y_train = X[idx[:100]], y[idx[:100]]
X_test, y_test = X[idx[100:]], y[idx[100:]]

models = []
preds = []

for i in range(5):
    X_s, y_s = resample(X_train, y_train, random_state=i)
    clf = DecisionTreeClassifier(max_depth=3, random_state=i).fit(X_s, y_s)
    models.append(clf)
    p = clf.predict(X_test)
    preds.append(p)
    acc = accuracy_score(y_test, p)
    print(f"Model {i+1} predictions: {p}")
    print(f"Model {i+1} accuracy: {acc:.2f}")

preds = np.array(preds)
final_pred = [np.bincount(preds[:, i]).argmax() for i in range(preds.shape[1])]
ensemble_acc = accuracy_score(y_test, final_pred)
print(f"\nFinal ensemble prediction: {final_pred}")
print(f"Ensemble accuracy: {ensemble_acc:.2f}")
